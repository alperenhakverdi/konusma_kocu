{"ast":null,"code":"/**\r\n * apiService.js\r\n * Backend API ile iletisim servisi\r\n */\n\nconst API_BASE_URL = 'http://localhost:5000';\nclass ApiService {\n  // Konusma analizi API cagrisi\n  static async analyzeTranscript(transcript, duration = 0) {\n    try {\n      console.log('üì° Backend API √ßaƒürƒ±sƒ± ba≈üladƒ±');\n      console.log(`üìù G√∂nderilen metin: ${transcript.substring(0, 50)}...`);\n      const response = await fetch(`${API_BASE_URL}/api/analyze-speech`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          transcript: transcript.trim(),\n          duration: duration\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || `HTTP Error: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('‚úÖ Backend yanƒ±t alƒ±ndƒ±');\n      return {\n        success: true,\n        data: data.analysisResult,\n        timestamp: data.timestamp\n      };\n    } catch (error) {\n      console.error('‚ùå API √ßaƒürƒ±sƒ± hatasƒ±:', error);\n      return {\n        success: false,\n        error: error.message,\n        // Fallback olarak mock data d√∂n\n        data: this.getFallbackAnalysis(transcript, duration)\n      };\n    }\n  }\n\n  // API hatasƒ± durumunda fallback analiz\n  static getFallbackAnalysis(transcript, duration) {\n    const kelimeSayisi = transcript.split(' ').length;\n    const cumleSayisi = transcript.split(/[.!?]+/).filter(s => s.trim().length > 0).length;\n    console.log('üìã Fallback analiz kullanƒ±lƒ±yor (API hatasƒ±)');\n    return {\n      skorlar: {\n        akicilikSkoru: 75,\n        dilbilgisiSkoru: 80,\n        icerikKalitesi: 70,\n        sestonuSkoru: 75,\n        genel_skor: 75\n      },\n      detayliAnaliz: {\n        kelimeSayisi: kelimeSayisi,\n        cumleSayisi: cumleSayisi,\n        konusmaSuresi: duration,\n        ortalamaCumleUzunlugu: Math.round(kelimeSayisi / (cumleSayisi || 1)),\n        dolguKelimeler: [],\n        olumluYonler: [\"Konu≈ümanƒ±z anla≈üƒ±lƒ±r bir yapƒ±da\", \"Kelime se√ßiminiz uygun\", \"‚ö†Ô∏è Bu fallback analiz - API baƒülantƒ±sƒ± kontrol edilsin\"],\n        gelisimAlanlari: [\"Backend baƒülantƒ±sƒ± kurulamadƒ±\", \"Ger√ßek AI analizi i√ßin API'yi kontrol edin\"],\n        oneriler: [\"Daha yava≈ü konu≈ümayƒ± deneyin\", \"Ana fikrinizi net vurgulayƒ±n\", \"Backend servisinin √ßalƒ±≈ütƒ±ƒüƒ±ndan emin olun\"]\n      },\n      duygusal_analiz: {\n        ana_duygu: \"n√∂tr\",\n        guven_seviyesi: \"orta\",\n        enerji_seviyesi: \"orta\",\n        samimilik: \"orta\"\n      },\n      profesyonelOneriler: [\"‚ö†Ô∏è ≈ûu an fallback mode\", \"Backend API'si √ßalƒ±≈ümƒ±yor\", \"Ger√ßek analiz i√ßin server'ƒ± kontrol edin\"]\n    };\n  }\n\n  // Backend health check\n  static async checkBackendHealth() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/health`);\n      const data = await response.json();\n      console.log('üíö Backend saƒülƒ±klƒ±:', data);\n      return true;\n    } catch (error) {\n      console.error('üíî Backend baƒülantƒ± hatasƒ±:', error);\n      return false;\n    }\n  }\n}\nexport default ApiService;","map":{"version":3,"names":["API_BASE_URL","ApiService","analyzeTranscript","transcript","duration","console","log","substring","response","fetch","method","headers","body","JSON","stringify","trim","ok","errorData","json","Error","message","status","data","success","analysisResult","timestamp","error","getFallbackAnalysis","kelimeSayisi","split","length","cumleSayisi","filter","s","skorlar","akicilikSkoru","dilbilgisiSkoru","icerikKalitesi","sestonuSkoru","genel_skor","detayliAnaliz","konusmaSuresi","ortalamaCumleUzunlugu","Math","round","dolguKelimeler","olumluYonler","gelisimAlanlari","oneriler","duygusal_analiz","ana_duygu","guven_seviyesi","enerji_seviyesi","samimilik","profesyonelOneriler","checkBackendHealth"],"sources":["C:/Users/ASUS/Desktop/konusma_kocu/frontend/src/services/apiService.js"],"sourcesContent":["/**\r\n * apiService.js\r\n * Backend API ile iletisim servisi\r\n */\r\n\r\nconst API_BASE_URL = 'http://localhost:5000';\r\n\r\nclass ApiService {\r\n  // Konusma analizi API cagrisi\r\n  static async analyzeTranscript(transcript, duration = 0) {\r\n    try {\r\n      console.log('üì° Backend API √ßaƒürƒ±sƒ± ba≈üladƒ±');\r\n      console.log(`üìù G√∂nderilen metin: ${transcript.substring(0, 50)}...`);\r\n\r\n      const response = await fetch(`${API_BASE_URL}/api/analyze-speech`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          transcript: transcript.trim(),\r\n          duration: duration\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || `HTTP Error: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('‚úÖ Backend yanƒ±t alƒ±ndƒ±');\r\n      \r\n      return {\r\n        success: true,\r\n        data: data.analysisResult,\r\n        timestamp: data.timestamp\r\n      };\r\n\r\n    } catch (error) {\r\n      console.error('‚ùå API √ßaƒürƒ±sƒ± hatasƒ±:', error);\r\n      \r\n      return {\r\n        success: false,\r\n        error: error.message,\r\n        // Fallback olarak mock data d√∂n\r\n        data: this.getFallbackAnalysis(transcript, duration)\r\n      };\r\n    }\r\n  }\r\n\r\n  // API hatasƒ± durumunda fallback analiz\r\n  static getFallbackAnalysis(transcript, duration) {\r\n    const kelimeSayisi = transcript.split(' ').length;\r\n    const cumleSayisi = transcript.split(/[.!?]+/).filter(s => s.trim().length > 0).length;\r\n\r\n    console.log('üìã Fallback analiz kullanƒ±lƒ±yor (API hatasƒ±)');\r\n\r\n    return {\r\n      skorlar: {\r\n        akicilikSkoru: 75,\r\n        dilbilgisiSkoru: 80,\r\n        icerikKalitesi: 70,\r\n        sestonuSkoru: 75,\r\n        genel_skor: 75\r\n      },\r\n      detayliAnaliz: {\r\n        kelimeSayisi: kelimeSayisi,\r\n        cumleSayisi: cumleSayisi,\r\n        konusmaSuresi: duration,\r\n        ortalamaCumleUzunlugu: Math.round(kelimeSayisi / (cumleSayisi || 1)),\r\n        dolguKelimeler: [],\r\n        olumluYonler: [\r\n          \"Konu≈ümanƒ±z anla≈üƒ±lƒ±r bir yapƒ±da\",\r\n          \"Kelime se√ßiminiz uygun\",\r\n          \"‚ö†Ô∏è Bu fallback analiz - API baƒülantƒ±sƒ± kontrol edilsin\"\r\n        ],\r\n        gelisimAlanlari: [\r\n          \"Backend baƒülantƒ±sƒ± kurulamadƒ±\",\r\n          \"Ger√ßek AI analizi i√ßin API'yi kontrol edin\"\r\n        ],\r\n        oneriler: [\r\n          \"Daha yava≈ü konu≈ümayƒ± deneyin\",\r\n          \"Ana fikrinizi net vurgulayƒ±n\",\r\n          \"Backend servisinin √ßalƒ±≈ütƒ±ƒüƒ±ndan emin olun\"\r\n        ]\r\n      },\r\n      duygusal_analiz: {\r\n        ana_duygu: \"n√∂tr\",\r\n        guven_seviyesi: \"orta\",\r\n        enerji_seviyesi: \"orta\",\r\n        samimilik: \"orta\"\r\n      },\r\n      profesyonelOneriler: [\r\n        \"‚ö†Ô∏è ≈ûu an fallback mode\",\r\n        \"Backend API'si √ßalƒ±≈ümƒ±yor\",\r\n        \"Ger√ßek analiz i√ßin server'ƒ± kontrol edin\"\r\n      ]\r\n    };\r\n  }\r\n\r\n  // Backend health check\r\n  static async checkBackendHealth() {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/health`);\r\n      const data = await response.json();\r\n      console.log('üíö Backend saƒülƒ±klƒ±:', data);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('üíî Backend baƒülantƒ± hatasƒ±:', error);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ApiService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}